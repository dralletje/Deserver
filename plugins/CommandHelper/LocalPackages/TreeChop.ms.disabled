bind(player_interact, null, array( button: left), @event,
if( !pinfo()[11], die() )
if(@event[action] != 'left_click_block', die() )
if( !has_permission(player(), 'frase.timber') || !pisop(), die() )
@iloc = string_position(@event[item], ':')
if(@iloc != -1){
	@i = substr(@event[item], 0, @iloc)
} else {
	@i = @event[item]
}
if(!array_contains(array(258, 275, 279, 286, 4365, 6279, 7816, 10264, 14317, 14327, 28008), @i), die() )
@face = to_lower(@event[facing])
if(!array_contains_ic(array('NORTH', 'EAST', 'SOUTH', 'WEST'), @face), die())


if(is_cancelled()){
	die()
}

@core_location  = @event['location']
@current_log    = @event['location']
@core_x         = @event['location'][0]
@core_y         = @event['location'][1]
@core_z         = @event['location'][2]
@core_w         = @event['location'][3]
@logs           = array( @event['location'] )
@selected_logs  = array()
@selected_leaves= array()
@to_detect      = array( @event['location'])
@block          = get_block_at(@core_location)
@player         = player()
@time_stamp     = time()

@around = array(
	array(@core_location[0]    , @core_location[1], @core_location[2]    , @core_location[3]),
	array(@core_location[0]    , @core_location[1], @core_location[2] + 7, @core_location[3]),
	array(@core_location[0]    , @core_location[1], @core_location[2] - 7, @core_location[3]),
	array(@core_location[0] + 7, @core_location[1], @core_location[2]    , @core_location[3]),
	array(@core_location[0] + 7, @core_location[1], @core_location[2] + 7, @core_location[3]),
	array(@core_location[0] + 7, @core_location[1], @core_location[2] - 7, @core_location[3]),
	array(@core_location[0] - 7, @core_location[1], @core_location[2]    , @core_location[3]),
	array(@core_location[0] - 7, @core_location[1], @core_location[2] + 7, @core_location[3]),
	array(@core_location[0] - 7, @core_location[1], @core_location[2] - 7, @core_location[3])
)

@types = array(
	oak: array('17:0', '17:4', '17:8'), 
	spruce: array('17:1', '17:5', '17:9'),
	birch: array( '17:2', '17:6', '17:10'),
	jungle: array( '17:3', '17:7', '17:11'),
	redwood: array( '3261:0', '3261:1', '3261:2')
)
@leaves_types = array(
	oak: array('18:0', '18:4', '18:8', '18:12', '18:16'), 
	spruce: array('18:1', '18:5', '18:9', '18:13', '18:17'), 
	birch: array('18:2', '18:6', '18:10', '18:14', '18:18'), 
	jungle: array('18:3', '18:7', '18:11', '18:15', '18:19'),
	redwood: array( '3259:0', '3259:8', '3259:16')
)

foreach(@types, @type_name, @type){
	if(array_contains(@type, @block)){
		@found_type = true
		break()
	}
}
if(@found_type != true, die())

cancel()
msg(color(a)'The tree begins to crack and crumble...')

@event_id = bind(player_interact, array(priority: HIGH), array(button: left, player: player() ), @event,
	if( !pinfo()[11], die() )
	if(@event[action] != 'left_click_block', die() )
	@iloc = string_position(@event[item], ':')
	if(@iloc != -1){
	@i = substr(@event[item], 0, @iloc)
	} else {
		@i = @event[item]
	}
	if(!array_contains(array(258, 275, 279, 286, 4365, 6279, 7816, 10264, 14317, 14327, 28008), @i), die() )
	@types = array(
		oak: array('17:0', '17:4', '17:8'), 
		spruce: array('17:1', '17:5', '17:9'),
		birch: array( '17:2', '17:6', '17:10'),
		jungle: array( '17:3', '17:7', '17:11'),
		redwood: array( '3261:0', '3261:1', '3261:2')
	)
	@block = get_block_at(@event[location])
	foreach(@types, @type_name, @type){
		if(array_contains(@type, @block)){
			@found_type = true
			break()
		}
	}
	if(@found_type != true, die())
	cancel()
	die(color(c)'Error: You can only have one tree being chopped down at a time.')
)

proc(_get_around, @loc, @y,	
	if(@loc[1] - @y < 1){
		return(array(
			array(@loc[0], @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2] - 1, @loc[3])
		))
	} else if(@loc[1] - @y < 4){
		return(array(
			array(@loc[0], @loc[1], @loc[2] + 1, @loc[3]),
			array(@loc[0], @loc[1], @loc[2] - 1, @loc[3]),
			array(@loc[0] + 1, @loc[1], @loc[2], @loc[3]),
			array(@loc[0] + 1, @loc[1], @loc[2] + 1, @loc[3]),
			array(@loc[0] + 1, @loc[1], @loc[2] - 1, @loc[3]),
			array(@loc[0] - 1, @loc[1], @loc[2], @loc[3]),
			array(@loc[0] - 1, @loc[1], @loc[2] + 1, @loc[3]),
			array(@loc[0] - 1, @loc[1], @loc[2] - 1, @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2] - 1, @loc[3])
		))
	} else {
		return(array(
			array(@loc[0], @loc[1], @loc[2] + 1, @loc[3]),
			array(@loc[0], @loc[1], @loc[2] - 1, @loc[3]),
			array(@loc[0] + 1, @loc[1], @loc[2], @loc[3]),
			array(@loc[0] + 1, @loc[1], @loc[2] + 1, @loc[3]),
			array(@loc[0] + 1, @loc[1], @loc[2] - 1, @loc[3]),
			array(@loc[0] - 1, @loc[1], @loc[2], @loc[3]),
			array(@loc[0] - 1, @loc[1], @loc[2] + 1, @loc[3]),
			array(@loc[0] - 1, @loc[1], @loc[2] - 1, @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0], @loc[1] + 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] + 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2], @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] + 1, @loc[2] - 1, @loc[3]),
			array(@loc[0], @loc[1] - 1, @loc[2], @loc[3]),
			array(@loc[0], @loc[1] - 1, @loc[2] + 1, @loc[3]),
			array(@loc[0], @loc[1] - 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] - 1, @loc[2], @loc[3]),
			array(@loc[0] + 1, @loc[1] - 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] + 1, @loc[1] - 1, @loc[2] - 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] - 1, @loc[2], @loc[3]),
			array(@loc[0] - 1, @loc[1] - 1, @loc[2] + 1, @loc[3]),
			array(@loc[0] - 1, @loc[1] - 1, @loc[2] - 1, @loc[3])
		))
	}
)

@closure1 = closure(
	@to_detect = import('frase.timber.' . @time_stamp . '.to_detect')
	if(length(@to_detect) >= 1){
		@detecting = @to_detect[0]
		array_remove(@to_detect, 0)
		@cons = import('frase.timber.' . @time_stamp . '.cons')
		@all_locs = import('frase.timber.' . @time_stamp . '.all_locs')
		@selected_logs = import('frase.timber.' . @time_stamp . '.selected_logs')
		@selected_leaves = import('frase.timber.' . @time_stamp . '.selected_leaves')
		foreach(_get_around(@detecting, @core_y), @loc){
			if(get_block_at(@loc) == '0:0', continue())
			if(array_contains(@all_locs, string(@loc)), continue() )
			array_push(@all_locs, string(array(@loc[0], @loc[1], @loc[2], @loc[3])))
			@ns = replace('storage.sql.timber.placed.' . @loc[3] . '.' . @loc[0] . '.0.' . @loc[1] . '.0.' . @loc[2] . '.0', '-', 'n')
			if(has_value(@ns), continue() )
			if( @loc[1] <= 256 && abs(@loc[0] - @core_x) <= 8 && abs(@loc[2] - @core_z) <= 8 ){
				@bloc = get_block_at(@loc)
				if(array_contains(@type, @bloc)){
					array_push(@selected_logs, array(@loc[0], @loc[1], @loc[2], @loc[3], @bloc))
					array_push(@cons, array(@loc[0], @loc[1], @loc[2], @loc[3]))
				} else if(array_contains(@leaves_types[@type_name], @bloc)){
					array_push(@selected_leaves, array(@loc[0], @loc[1], @loc[2], @loc[3], @bloc))
					array_push(@cons, array(@loc[0], @loc[1], @loc[2], @loc[3]))
				}
			}
		}
		export('frase.timber.' . @time_stamp . '.to_detect', @to_detect )
		export('frase.timber.' . @time_stamp . '.cons', @cons )
		export('frase.timber.' . @time_stamp . '.all_locs', @all_locs )
		export('frase.timber.' . @time_stamp . '.selected_logs', @selected_logs )
		export('frase.timber.' . @time_stamp . '.selected_leaves', @selected_leaves )
	}
)

@closure = closure(

	export('frase.timber.' . @time_stamp . '.cons', @to_detect )
	export('frase.timber.' . @time_stamp . '.all_locs', array() )
	export('frase.timber.' . @time_stamp . '.selected_logs', @selected_logs )
	export('frase.timber.' . @time_stamp . '.selected_leaves', @selected_leaves )

	set_interval(20, closure( 
		@cons = import('frase.timber.' . @time_stamp . '.cons')
		if(!queue_running('frase.timber.' . @time_stamp . '.queue1') && length(@cons) != 0){
			@to_detect = @cons
			export('frase.timber.' . @time_stamp . '.cons', array())
			export('frase.timber.' . @time_stamp . '.to_detect', @to_detect )
			foreach(@to_detect, @detecting){
				queue_push(@closure1, 'frase.timber.' . @time_stamp . '.queue1')
			}
		} else if(!queue_running('frase.timber.' . @time_stamp . '.queue1') && length(@cons) == 0){

			if(length(@selected_logs) <= 1){
				unbind(@event_id)
				clear_task()
				die(color(a)'The tree did not budge.')
			} else {
				msg(color(a)'The tree begins to fall!!!')
			}

			@selected_logs = import('frase.timber.' . @time_stamp . '.selected_logs')
			@selected_leaves = import('frase.timber.' . @time_stamp . '.selected_leaves')
			array_reverse(@selected_logs)
			array_reverse(@selected_leaves)
			@push           = .08
			@lift           = .00
			@multiplier     = .75

			@sl = array()
			foreach( @selected_leaves, @leaves){
				@loc = array(@leaves[0], @leaves[1], @leaves[2], @leaves[3])
				if(rand(1, 10) > 5){
					set_block_at( @loc, 0 )
					array_push(@sl, @leaves)
				} else {
					break_block(@loc)
				}
			}
	
			foreach( @selected_logs, @log ){
				if( !(@core_x == @log[0] && @core_y == @log[1] && @core_z == @log[2] )){
					@velocity = array(0, @lift, 0)
					@movement = @push *( @multiplier * ( @log[1] - @core_y ))
					if(@face == 'west'){
						@velocity[0] = @movement
						@block = @type[1]
					} else if(@face == 'east'){
						@velocity[0] = @movement * -1
						@block = @type[1]
					} else if(@face == 'north'){
						@velocity[2] = @movement
						@block = @type[2]
					} else if(@face == 'south'){
						@velocity[2] = @movement * -1
						@block = @type[2]
					}
					if(@type_name == 'redwood'){
						@block = @log[4]
					}
					array_remove(@log, 4)
					set_block_at( @log, 0 )
					spawn_falling_block( @log, @block, @velocity)
				}
				break_block(array(@core_x, @core_y, @core_z, @core_w))
			}
	
			set_timeout(50, closure(
				foreach( @sl, @leaves){
					@velocity = array(0, @lift, 0)
					@movement = @push *( @multiplier * ( @log[1] - @core_y ))
					if(@face == 'west'){
						@velocity[0] = @movement
					} else if(@face == 'east'){
						@velocity[0] = @movement * -1
					} else if(@face == 'north'){
						@velocity[2] = @movement
					} else if(@face == 'south'){
						@velocity[2] = @movement * -1
					}
					@block = @leaves[4]
					array_remove(@leaves, 4)
					spawn_falling_block( @leaves, @block , @velocity)
				}
			))
			msg(color(a)'Did you hear something?')
			unbind(@event_id)
			clear_task()
			}
		))	
	)
	queue_push(@closure, 'frase.timber.' . player())
) #end of first bind



bind(block_place, null, null, @event,
	@loc = @event[location]
	@logs = array(17, 243, 1388, 1389, 1290, 1391, 1411, 1412, 1413, 1904, 2163, 2176, 2179, 2404, 3122, 3251, 3261, 3263, 3271, 3277, 3280, 3704 )
	@leaves = array(18, 242, 1905, 2164, 2166, 2177, 2405, 3123, 3258, 3259, 3272, 3278)
	if(array_contains(@logs, @event[type]) || array_contains(@leaves, @event[type]) ){
		queue_push(closure(
			if(sk_can_build(@loc) ){
				@ns = replace('storage.sql.timber.placed.' . @loc[3] . '.' . @loc[0] . '.' . @loc[1] . '.' . @loc[2], '-', 'n')
				if(!has_value(@ns) ){
					store_value(@ns, @event )
				}
			}
		), 'frase.timber.placement')
	}
)

bind(block_break, null, null, @event,
	@loc = @event[location]
	@logs = array(17, 243, 1388, 1389, 1290, 1391, 1411, 1412, 1413, 1904, 2163, 2176, 2179, 2404, 3122, 3251, 3261, 3263, 3271, 3277, 3280, 3704 )
	@leaves = array(18, 242, 1905, 2164, 2166, 2177, 2405, 3123, 3258, 3259, 3272, 3278)
	if(array_contains(@logs, @event[block][type]) || array_contains(@leaves, @event[block][type]) ){
		queue_push(closure(
			if(sk_can_build(@loc) ){
				@ns = replace('storage.sql.timber.placed.' . @loc[3] . '.' . @loc[0] . '.' . @loc[1] . '.' . @loc[2], '-', 'n')
				if(has_value(@ns) ){
					clear_value(@ns)
				}
			}
		), 'frase.timber.placement')
	}
)